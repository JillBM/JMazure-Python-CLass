import string
winner = False
# 1 is player 1
# 3 is player 1 king pieces
# 2 is player 2
# 4 is player 2 king pieces
ylist = "ABCDEFGH"
board = [
  [0,1,0,1,0,1,0,1],
  [1,0,1,0,1,0,1,0],
  [0,1,0,1,0,1,0,1],
  [0,0,0,0,0,0,0,0],
  [0,0,0,0,0,0,0,0],
  [2,0,2,0,2,0,2,0],
  [0,2,0,2,0,2,0,2],
  [2,0,2,0,2,0,2,0]
]
# p1-pieces = [][]
# p2-pieces = [][]
def drawBoard(board2draw):
  print( "  | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8")
  row = ""
  y = 0
  while y < 8:
    x = 0
    while x < 8:
      if(x==0):
        # https://stackoverflow.com/a/1724536
        row = row+str(string.ascii_uppercase[y])+" | "
      # row = row+str(board2draw[y][x])

      if board2draw[y][x] == 1:
        row = row+"O"
      elif board2draw[y][x] == 2:
        row = row+"X"
      elif board2draw[y][x] == 3:
        row = row+"x"
      elif board2draw[y][x] == 4:
        row = row+"O"
      elif board2draw[y][x] == 0:
        row = row+" "

      # Add seperation
      if(x<8):
        row = row+" | "
      # print(board2draw[y][x])
      x = x+1
    print(row)
    row = ""
    y = y+1
def movePiece(frm, to, plr):
  tempboard = board
  player = board[frm[0]][frm[1]]
  # print(frm)
  # print(to)
  # print(player)
  # if plr == player:
  yDir = 0
  xDir = 0
  yDiff = frm[0]-to[0]
  xDiff = frm[1]-to[1]
  # if yDiff < 1:
  #   yDiff = yDiff*-1
  # if xDiff < 1:
  #   xDiff = xDiff*-1
  # if xDiff == yDiff:
  # diff = yDiff
  if yDiff<0:
    yDir = -1
  elif yDiff<1:
    yDir = 1
  if xDiff<0:
    xDir = -1
  elif xDiff<1:
    xDir = 1
  # sets both differentials to positive numbers
  i = 0
  while i<=1:
    y = frm[0]
    x = frm[1]
    tempboard[y][x] = 0
    x = x+xDir
    y = y+yDir
    i=i+1
  print(yDiff)
  print(xDiff)
  # tempboard[frm[0]][frm[1]] = 0
  tempboard[to[0]][to[1]] = player
  drawBoard(tempboard)
  return tempboard
  # drawBoard()

def validate(moves, plr):
  frm = [int, int]
  to = [int, int]
  
  # move[0] = move[0].split("")
  # move[1] = move[1].split("")
  # from[0][0] = move[0][0]
  # print(ylist.index(move[0]))
  # print(ylist.index(move[0][1]))
  try:
    move = moves.split(",")
    frm[0] = int(ylist.index(move[0][0]))
    frm[1] = int(move[0][1])-1
    to[0] = int(ylist.index(move[1][0]))
    to[1] = int(move[1][1])-1

    # Both diff's should be the same but may be negative
    yDiff = frm[0]-to[0]
    xDiff = frm[1]-to[1]
    # sets both differentials to positive numbers
    if yDiff < 1:
      yDiff = yDiff*-1
    if xDiff < 1:
      xDiff = xDiff*-1
    if board[frm[0]][frm[1]] == plr and frm[0] != to[0] and frm[1] != to[1] and board[to[0]][to[1]] == 0 and yDiff == xDiff:
      # if plr == 1
      return movePiece(frm, to, plr)
    else:
      print("Invalid move")
  except Exception as e:
    print ("An exception was thrown!")
    print (str(e))

  # print(frm[1])
  # return movePiece(frm, to, plr)




# drawBoard(board)
# board = validate("C2,D3", 1)
# drawBoard(board)


print("Welcome to Checkers! Grab a friend to play!")
print("Player one, please enter your name:")
p1Name = input()
print("Player two, please enter your name:")
p2Name = input()
print("Okay " + p1Name+ " and " + p2Name+ ", get ready for the checkers battle of a lifetime!")
print(p1Name + ", you are O. " + p2Name + ", you are X.")
print("To move, please enter your move as a starting piece and an ending coordinate seperated by a \",\". Example: C2,D3")

drawBoard(board)
plr = 1
while winner == False:
  if plr == 1:
    print(p1Name+", please make your move:")
  elif plr == 2:
    print(p2Name+", please make your move:")
  move = input()
  tmpboard = validate(move, plr)
  # if tmpboard == board:
  #   print ("Try Again")
  # elif plr == 1 and board != tmpboard:
  #   tmpboard = board
  #   plr = 2
  # elif plr == 2 and board != tmpboard:
  #   tmpboard = board
  #   plr = 1
  if plr == 1:
    tmpboard = board
    plr = 2
  elif plr == 2:
    tmpboard = board
    plr = 1
